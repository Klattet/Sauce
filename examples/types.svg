<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.2//EN" "http://www.w3.org/Graphics/SVG/1.2/DTD/svg12.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="full" xml:space="preserve" width="972" height="616">
<desc>types</desc>
<defs>
<style type="text/css">
<![CDATA[
rect { fill:#000000; } 
g { font-size: 8; font-family: 'Courier New',monospace; white-space: pre;}
text { fill:#f0f0f8; }
tspan.num { fill:#90d0ff; }
tspan.esc { fill:#e0e080; }
tspan.sng { fill:#90d0ff; }
tspan.pps { fill:#90d0ff; }
tspan.slc { fill:#c0c0d0; font-style:italic; }
tspan.com { fill:#c0c0d0; font-style:italic; }
tspan.ppc { fill:#f0f0f8; }
tspan.opt { fill:#a2ff86; }
tspan.ipl { fill:#c5ff7d; }
tspan.lin { fill:#c0c0d0; font-style:italic; }
tspan.erm { fill:#ff0000; font-weight:bold; }
tspan.err { fill:#ff0000; font-weight:bold; }
tspan.kwa { fill:#ffa0ff; }
tspan.kwb { fill:#ffc864; }
tspan.kwc { fill:#ffffa1; }
tspan.kwd { fill:#ff5c33; }
tspan.kwe { fill:#6d98fd; }
tspan.kwf { fill:#57d2c3; }
]]>
</style>
</defs>
<g>
<rect x="0" y="0" width="100%" height="100%" rx="3%"/>
<text x="10" y="16"></text>
<text x="10" y="32"><tspan class="slc">#&#160;A&#160;simple&#160;type&#160;that&#160;has&#160;two&#160;fields&#160;of&#160;integers.</tspan></text>
<text x="10" y="48"><tspan class="kwa">typ&#160;</tspan>Foo<tspan class="opt">(</tspan></text>
<text x="10" y="64">&#160;&#160;&#160;&#160;bar&#160;<tspan class="kwa">of&#160;</tspan>Integer<tspan class="opt">,</tspan></text>
<text x="10" y="80">&#160;&#160;&#160;&#160;baz&#160;<tspan class="kwa">of&#160;</tspan>Integer</text>
<text x="10" y="96"><tspan class="opt">)</tspan></text>
<text x="10" y="112"></text>
<text x="10" y="128"><tspan class="com">#[</tspan></text>
<text x="10" y="144"><tspan class="com">A&#160;function&#160;that&#160;takes&#160;an&#160;object&#160;of&#160;type&#160;Foo,</tspan></text>
<text x="10" y="160"><tspan class="com">adds&#160;the&#160;fields&#160;together&#160;and&#160;returns&#160;the&#160;result.</tspan></text>
<text x="10" y="176"><tspan class="com">]#</tspan></text>
<text x="10" y="192"><tspan class="kwa">fun&#160;</tspan>add<tspan class="opt">(</tspan>self&#160;<tspan class="kwa">of&#160;</tspan>Foo<tspan class="opt">)&#160;</tspan><tspan class="kwa">to&#160;</tspan>Integer&#160;<tspan class="kwa">is</tspan></text>
<text x="10" y="208">&#160;&#160;&#160;&#160;<tspan class="kwa">ret&#160;</tspan>self<tspan class="opt">.</tspan>bar&#160;<tspan class="opt">+&#160;</tspan>self<tspan class="opt">.</tspan>baz</text>
<text x="10" y="224"></text>
<text x="10" y="240"><tspan class="com">#[</tspan></text>
<text x="10" y="256"><tspan class="com">A&#160;function&#160;that&#160;overloads&#160;the&#160;previous&#160;one&#160;with</tspan></text>
<text x="10" y="272"><tspan class="com">an&#160;additional&#160;argument&#160;that&#160;should&#160;also&#160;be&#160;added&#160;to&#160;the&#160;sum.</tspan></text>
<text x="10" y="288"><tspan class="com">]#</tspan></text>
<text x="10" y="304"><tspan class="kwa">fun&#160;</tspan>add<tspan class="opt">(</tspan>self&#160;<tspan class="kwa">of&#160;</tspan>Foo<tspan class="opt">,&#160;</tspan>extra&#160;<tspan class="kwa">of&#160;</tspan>Integer<tspan class="opt">)&#160;</tspan><tspan class="kwa">to&#160;</tspan>Integer&#160;<tspan class="kwa">is</tspan></text>
<text x="10" y="320">&#160;&#160;&#160;&#160;<tspan class="kwa">ret&#160;</tspan>self<tspan class="opt">.</tspan>bar&#160;<tspan class="opt">+&#160;</tspan>self<tspan class="opt">.</tspan>baz&#160;<tspan class="opt">+&#160;</tspan>extra</text>
<text x="10" y="336"></text>
<text x="10" y="352"><tspan class="com">#[</tspan></text>
<text x="10" y="368"><tspan class="com">Create&#160;a&#160;new&#160;instance&#160;of&#160;type&#160;Foo&#160;and&#160;store&#160;it&#160;in&#160;a&#160;variable.</tspan></text>
<text x="10" y="384"><tspan class="com">Type&#160;annotation&#160;on&#160;the&#160;variable&#160;is&#160;not&#160;necessary&#160;because&#160;it's</tspan></text>
<text x="10" y="400"><tspan class="com">initialising&#160;an&#160;instance&#160;of&#160;a&#160;type&#160;directly.</tspan></text>
<text x="10" y="416"><tspan class="com">]#</tspan></text>
<text x="10" y="432"><tspan class="kwa">val&#160;</tspan>foo&#160;<tspan class="kwa">is&#160;</tspan>Foo<tspan class="opt">(</tspan><tspan class="num">3</tspan><tspan class="opt">,&#160;</tspan><tspan class="num">4</tspan><tspan class="opt">)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="slc">#&#160;Positional&#160;arguments</tspan></text>
<text x="10" y="448"><tspan class="kwa">val&#160;</tspan>other_foo&#160;<tspan class="kwa">is&#160;</tspan>Foo<tspan class="opt">(</tspan>bar&#160;<tspan class="kwa">is&#160;</tspan><tspan class="num">7</tspan><tspan class="opt">,&#160;</tspan>baz&#160;<tspan class="kwa">is&#160;</tspan><tspan class="num">8</tspan><tspan class="opt">)&#160;</tspan><tspan class="slc">#&#160;Keyword&#160;arguments</tspan></text>
<text x="10" y="464"></text>
<text x="10" y="480"><tspan class="com">#[</tspan></text>
<text x="10" y="496"><tspan class="com">Calling&#160;the&#160;functions&#160;in&#160;different&#160;ways.</tspan></text>
<text x="10" y="512"><tspan class="com">Type&#160;annotations&#160;are&#160;necessary&#160;because&#160;the&#160;result&#160;type</tspan></text>
<text x="10" y="528"><tspan class="com">is&#160;not&#160;immediately&#160;apparent&#160;by&#160;reading&#160;the&#160;line.</tspan></text>
<text x="10" y="544"><tspan class="com">]#</tspan></text>
<text x="10" y="560"><tspan class="kwa">val&#160;</tspan>fifteen&#160;<tspan class="kwa">of&#160;</tspan>Integer&#160;<tspan class="kwa">is&#160;</tspan>add<tspan class="opt">(</tspan>foo<tspan class="opt">,&#160;</tspan><tspan class="num">8</tspan><tspan class="opt">)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="slc">#&#160;Call&#160;function&#160;with&#160;arguments</tspan></text>
<text x="10" y="576"><tspan class="kwa">val&#160;</tspan>seven&#160;<tspan class="kwa">of&#160;</tspan>Integer&#160;<tspan class="kwa">is&#160;</tspan>foo<tspan class="opt">:</tspan>add<tspan class="opt">()&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="slc">#&#160;Call&#160;method</tspan></text>
<text x="10" y="592"><tspan class="kwa">val&#160;</tspan>twelve&#160;<tspan class="kwa">of&#160;</tspan>Integer&#160;<tspan class="kwa">is&#160;</tspan>foo<tspan class="opt">:</tspan>add<tspan class="opt">(</tspan><tspan class="num">5</tspan><tspan class="opt">)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</tspan><tspan class="slc">#&#160;Call&#160;method&#160;with&#160;argument</tspan></text>
<text x="10" y="608"><tspan class="kwa">val&#160;</tspan>twenty&#160;<tspan class="kwa">of&#160;</tspan>Integer&#160;<tspan class="kwa">is&#160;</tspan>foo<tspan class="opt">:</tspan>add<tspan class="opt">(</tspan>extra&#160;<tspan class="kwa">is&#160;</tspan><tspan class="num">13</tspan><tspan class="opt">)&#160;</tspan><tspan class="slc">#&#160;Call&#160;method&#160;with&#160;keyword&#160;argument</tspan></text>
<text x="10" y="624"></text>
</g>
</svg>
